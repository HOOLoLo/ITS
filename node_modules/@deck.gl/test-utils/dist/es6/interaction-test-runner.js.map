{"version":3,"sources":["../../src/interaction-test-runner.js"],"names":["TestRunner","DEFAULT_TEST_CASE","name","events","onBeforeEvents","deck","onAfterEvents","layers","context","sleep","timeout","Promise","resolve","window","setTimeout","InteractionTestRunner","defaultTestCase","runTestCase","testCase","onDone","promise","event","wait","then","browserTestDriver_emulateInput","assert","layerManager","getLayers","_next"],"mappings":"AAqBA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,0BADkB;AAExBC,EAAAA,MAAM,EAAE,EAFgB;AAGxBC,EAAAA,cAAc,EAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAY,CAAE,CAHN;AAIxBC,EAAAA,aAAa,EAAE,CAAC;AAACD,IAAAA,IAAD;AAAOE,IAAAA,MAAP;AAAeC,IAAAA;AAAf,GAAD,KAA6B,CAAE;AAJtB,CAA1B;;AAOA,SAASC,KAAT,CAAeC,OAAf,EAAwB;AACtB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,MAAM,CAACC,UAAP,CAAkBF,OAAlB,EAA2BF,OAA3B,CAAvB,CAAP;AACD;;AAED,eAAe,MAAMK,qBAAN,SAAoCf,UAApC,CAA+C;AAC5D,MAAIgB,eAAJ,GAAsB;AACpB,WAAOf,iBAAP;AACD;;AAIDgB,EAAAA,WAAW,CAACC,QAAD,EAAWC,MAAX,EAAmB;AAC5BD,IAAAA,QAAQ,CAACV,OAAT,GAAmBU,QAAQ,CAACd,cAAT,CAAwB;AACzCC,MAAAA,IAAI,EAAE,KAAKA;AAD8B,KAAxB,CAAnB;AAIA,QAAIe,OAAO,GAAGT,OAAO,CAACC,OAAR,EAAd;;AACA,SAAK,MAAMS,KAAX,IAAoBH,QAAQ,CAACf,MAA7B,EAAqC;AACnC,UAAIkB,KAAK,CAACC,IAAV,EAAgB;AACdF,QAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,MAAMd,KAAK,CAACY,KAAK,CAACC,IAAP,CAAxB,CAAV;AACD,OAFD,MAEO;AACLF,QAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,MAAMV,MAAM,CAACW,8BAAP,CAAsCH,KAAtC,CAAnB,CAAV;AACD;AACF;;AACD,WAAOD,OAAO,CAACG,IAAR,CAAaJ,MAAb,CAAP;AACD;;AAEDM,EAAAA,MAAM,CAACP,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACZ,aAAT,CAAuB;AACrBD,MAAAA,IAAI,EAAE,KAAKA,IADU;AAErBE,MAAAA,MAAM,EAAE,KAAKF,IAAL,CAAUqB,YAAV,CAAuBC,SAAvB,EAFa;AAGrBnB,MAAAA,OAAO,EAAEU,QAAQ,CAACV;AAHG,KAAvB;;AAKA,SAAKoB,KAAL;AACD;;AA9B2D","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global window */\nimport TestRunner from './test-runner';\n\nconst DEFAULT_TEST_CASE = {\n  name: 'Unnamed interaction test',\n  events: [],\n  onBeforeEvents: ({deck}) => {},\n  onAfterEvents: ({deck, layers, context}) => {}\n};\n\nfunction sleep(timeout) {\n  return new Promise(resolve => window.setTimeout(resolve, timeout));\n}\n\nexport default class InteractionTestRunner extends TestRunner {\n  get defaultTestCase() {\n    return DEFAULT_TEST_CASE;\n  }\n\n  // chain events\n  // TODO - switch to async/await\n  runTestCase(testCase, onDone) {\n    testCase.context = testCase.onBeforeEvents({\n      deck: this.deck\n    });\n\n    let promise = Promise.resolve();\n    for (const event of testCase.events) {\n      if (event.wait) {\n        promise = promise.then(() => sleep(event.wait));\n      } else {\n        promise = promise.then(() => window.browserTestDriver_emulateInput(event));\n      }\n    }\n    return promise.then(onDone);\n  }\n\n  assert(testCase) {\n    testCase.onAfterEvents({\n      deck: this.deck,\n      layers: this.deck.layerManager.getLayers(),\n      context: testCase.context\n    });\n    this._next();\n  }\n}\n"],"file":"interaction-test-runner.js"}