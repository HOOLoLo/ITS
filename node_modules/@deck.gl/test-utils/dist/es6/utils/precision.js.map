{"version":3,"sources":["../../../src/utils/precision.js"],"names":["toLowPrecision","input","precision","Number","toPrecision","Array","isArray","map","item","key"],"mappings":"AAOA,OAAO,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,SAAS,GAAG,EAA3C,EAA+C;AAEpD,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,IAAAA,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACG,WAAN,CAAkBF,SAAlB,CAAD,CAAd;AACD;;AACD,MAAIG,KAAK,CAACC,OAAN,CAAcL,KAAd,CAAJ,EAA0B;AACxBA,IAAAA,KAAK,GAAGA,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAIR,cAAc,CAACQ,IAAD,EAAON,SAAP,CAAhC,CAAR;AACD;;AACD,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,SAAK,MAAMQ,GAAX,IAAkBR,KAAlB,EAAyB;AACvBA,MAAAA,KAAK,CAACQ,GAAD,CAAL,GAAaT,cAAc,CAACC,KAAK,CAACQ,GAAD,CAAN,EAAaP,SAAb,CAA3B;AACD;AACF;;AACD,SAAOD,KAAP;AACD","sourcesContent":["/**\n * Covert all numbers in a deep structure to a given precision, allowing\n * reliable float comparisons. Converts data in-place.\n * @param  {mixed} input      Input data\n * @param  {Number} [precision] Desired precision\n * @return {mixed}            Input data, with all numbers converted\n */\nexport function toLowPrecision(input, precision = 11) {\n  /* eslint-disable guard-for-in */\n  if (typeof input === 'number') {\n    input = Number(input.toPrecision(precision));\n  }\n  if (Array.isArray(input)) {\n    input = input.map(item => toLowPrecision(item, precision));\n  }\n  if (typeof input === 'object') {\n    for (const key in input) {\n      input[key] = toLowPrecision(input[key], precision);\n    }\n  }\n  return input;\n}\n"],"file":"precision.js"}